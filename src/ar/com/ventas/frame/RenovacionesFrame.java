/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.Configuracion;
import ar.com.ventas.entities.Domicilio;
import ar.com.ventas.entities.Rubro;
import ar.com.ventas.entities.Servicio;
import ar.com.ventas.entities.Trabajo;
import ar.com.ventas.estructuras.Constantes;
import ar.com.ventas.main.MainFrame;
import ar.com.ventas.services.ConfiguracionService;
import ar.com.ventas.services.RenglonTrabajoService;
import ar.com.ventas.services.RubroService;
import ar.com.ventas.services.TrabajoService;
import ar.com.ventas.util.UtilFrame;
import java.io.File;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jxl.Workbook;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;

/**
 *
 * @author Mario
 */
public class RenovacionesFrame extends javax.swing.JFrame {

    private List<Rubro> rubros;
    private List<Trabajo> trabajos;
    private List<Servicio> servicios;
    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    private DecimalFormat df = new DecimalFormat("00000");

    /**
     * Creates new form RenovacionesFrame
     */
    public RenovacionesFrame() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(Constantes.getR(), Constantes.getG(), Constantes.getB()));
        this.setLocationRelativeTo(null);
//        setExtendedState(this.MAXIMIZED_BOTH);
        llenarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        combo = new javax.swing.JComboBox<>();
        volverBtn = new javax.swing.JButton();
        excelBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        fechaTxt = new javax.swing.JTextField();
        cargarTrabajoBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("RENOVACIONES QUE VENCEN ESTE MES");

        jLabel1.setText("Rubro:");

        combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboActionPerformed(evt);
            }
        });
        combo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboKeyPressed(evt);
            }
        });

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        excelBtn.setText("Excel");
        excelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excelBtnActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ADMINISTRACION", "CONSORCIO", "ULT. FECHA", "TRAB. PENDIENTE", "OBSERV.", "ENCARG.TELEFONO"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        jLabel2.setText("Fecha:");

        fechaTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fechaTxt.setText("FECHA");
        fechaTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fechaTxtKeyPressed(evt);
            }
        });

        cargarTrabajoBtn.setText("Cargar Trabajo");
        cargarTrabajoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarTrabajoBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(excelBtn)
                        .addGap(18, 18, 18)
                        .addComponent(cargarTrabajoBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volverBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fechaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 265, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(fechaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volverBtn)
                    .addComponent(excelBtn)
                    .addComponent(cargarTrabajoBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void excelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excelBtnActionPerformed
        excel();
    }//GEN-LAST:event_excelBtnActionPerformed

    private void comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboActionPerformed
        if (evt.getModifiers() == 16) {
            int row = combo.getSelectedIndex();
            if (row > 0) {
                Rubro rubro = rubros.get(row - 1);
                go(rubro);
            }
        }
    }//GEN-LAST:event_comboActionPerformed

    private void fechaTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fechaTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            combo.setSelectedIndex(0);
            int largo = fechaTxt.getText().length();
            String fe = fechaTxt.getText();
            if (largo != 10) {
                fe = UtilFrame.fecha(fe);
                return;
            }
            combo.addFocusListener(null);
            combo.showPopup();
            combo.requestFocus();
        }
    }//GEN-LAST:event_fechaTxtKeyPressed

    private void cargarTrabajoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarTrabajoBtnActionPerformed
        int row = tabla.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UN TRABAJO PARA RENOVAR");
            return;
        }
        renovar(row);
    }//GEN-LAST:event_cargarTrabajoBtnActionPerformed

    private void comboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboKeyPressed
        if (evt.getKeyCode() == 10) {
            int row = combo.getSelectedIndex();
            if (row > 0) {
                Rubro rubro = rubros.get(row - 1);
                go(rubro);
            }
        }
    }//GEN-LAST:event_comboKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RenovacionesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RenovacionesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RenovacionesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RenovacionesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RenovacionesFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cargarTrabajoBtn;
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JButton excelBtn;
    private javax.swing.JTextField fechaTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void volver() {
        MainFrame mf = new MainFrame();
        mf.setVisible(true);
        this.dispose();
    }

    private void excel() {
        Configuracion conf = null;
        try {
            conf = new ConfiguracionService().getConfiguracion(1L);
        } catch (Exception ex) {
            Logger.getLogger(RenovacionesFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        Integer nc;
        if (conf.getNroRenovaciones() != null) {
            nc = conf.getNroRenovaciones();
            nc += 1;
        } else {
            nc = 1;
        }
        conf.setNroRenovaciones(nc);
        try {
            new ConfiguracionService().updateConfiguracion(conf);
        } catch (Exception ex) {
            Logger.getLogger(RenovacionesFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        String fn = df.format(nc);
        String rutaArchivo = "c://SYSTEM//excel//renovaciones" + fn + ".xls";
        File archivo = new File(rutaArchivo);
        if (archivo.exists()) {
            archivo.delete();
        }
        int rows = tabla.getRowCount();
//            int cols = tabla.getColumnCount();

        try {
            archivo.createNewFile();
        } catch (IOException ex) {
            Logger.getLogger(RenovacionesFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        WritableWorkbook libro = null;
        try {
            libro = Workbook.createWorkbook(archivo);
        } catch (IOException ex) {
            Logger.getLogger(RenovacionesFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        WritableSheet hoja1 = libro.createSheet("RENOVACIONES", 0);
        try {
            hoja1.addCell(new jxl.write.Label(0, 0, "EMITANK"));
            hoja1.addCell(new jxl.write.Label(0, 1, "ADMINISTRACION"));
            hoja1.addCell(new jxl.write.Label(1, 1, "CONSORCIO"));
            hoja1.addCell(new jxl.write.Label(2, 1, "ULT.FECHA"));
            hoja1.addCell(new jxl.write.Label(3, 1, "TRABAJO PENDIENTE"));
            hoja1.addCell(new jxl.write.Label(4, 1, "OBSERVACIONES"));
            hoja1.addCell(new jxl.write.Label(5, 1, "ENCARGADO Y TELEFONO"));

            for (int i = 0; i < rows; i++) {

                hoja1.addCell(new jxl.write.Label(0, i + 2, tabla.getValueAt(i, 0).toString()));
                hoja1.addCell(new jxl.write.Label(1, i + 2, tabla.getValueAt(i, 1).toString()));
                hoja1.addCell(new jxl.write.Label(2, i + 2, tabla.getValueAt(i, 2).toString()));
                hoja1.addCell(new jxl.write.Label(3, i + 2, tabla.getValueAt(i, 3).toString()));
                hoja1.addCell(new jxl.write.Label(4, i + 2, tabla.getValueAt(i, 4).toString()));
                hoja1.addCell(new jxl.write.Label(5, i + 2, tabla.getValueAt(i, 5).toString()));
            }
        } catch (WriteException ex) {
            Logger.getLogger(RenovacionesFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error configurando Excel");
        }
        try {
            libro.write();
            libro.close();
        } catch (IOException ex) {
            Logger.getLogger(RenovacionesFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error: 310");
        } catch (WriteException ex) {
            Logger.getLogger(RenovacionesFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error: 311");
        }
        JOptionPane.showMessageDialog(this, "Excel creado correctamente");

    }

    private void llenarCombo() {
        Date fecha = new Date();
        fechaTxt.setText(sdf.format(fecha));
        combo.removeAllItems();
        combo.addItem("");
        rubros = null;
        try {
            rubros = new RubroService().getAllRubrosActivos();
        } catch (Exception ex) {
            Logger.getLogger(RenovacionesFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (rubros != null && !rubros.isEmpty()) {
            for (Rubro r : rubros) {
                combo.addItem(r.getDetalle());
            }
        }
    }

    private void go(Rubro rubro) {
        UtilFrame.limpiarTabla(tabla);
        Date fecha = new Date();
        try {
            fecha = sdf.parse(fechaTxt.getText());
        } catch (ParseException ex) {
            Logger.getLogger(RenovacionesFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "ERROR EN FECHA");
            return;
        }
        trabajos = null;
        try {
            trabajos = new TrabajoService().getTrabajosByRubroParaRenovarActivos(rubro, fecha);
        } catch (Exception ex) {
            Logger.getLogger(RenovacionesFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (trabajos != null && !trabajos.isEmpty()) {
            DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
            for (Trabajo trabajo : trabajos) {
                String trabajoPendiente;
                String observaciones;
                try {
                    trabajoPendiente = new RenglonTrabajoService().getPendientesByTrabajo(trabajo);
                    observaciones = new RenglonTrabajoService().getCaracteristicasByTrabajo(trabajo);
                } catch (Exception ex) {
                    Logger.getLogger(RenovacionesFrame.class.getName()).log(Level.SEVERE, null, ex);
                    trabajoPendiente = "";
                    observaciones = "";
                }
                Object o[] = new Object[6];
                Domicilio dm = trabajo.getServicio().getConsorcio().getDomicilio();
                String dm1 = dm.getCalle() + " " + dm.getNumero();
                String adm = trabajo.getServicio().getConsorcio().getAdministrador().getRazonSocial();
                o[0] = adm;
                o[1] = dm1;
                o[2] = sdf.format(trabajo.getFecha());
                o[3] = trabajoPendiente;
                o[4] = observaciones;
                o[5] = trabajo.getServicio().getConsorcio().getEncargado()
                        + " " + trabajo.getServicio().getConsorcio().getTelefonoEncargado();
                tbl.addRow(o);
            }
            tabla.setModel(tbl);
        }
    }

    private void renovar(int row) {
        Trabajo trabajo = trabajos.get(row);
        RenovarTrabajoFrame rtf = new RenovarTrabajoFrame(trabajo);
        rtf.setVisible(true);
        this.dispose();
    }
}
