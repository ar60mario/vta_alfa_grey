/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.Consorcio;
import ar.com.ventas.entities.Importe;
import ar.com.ventas.entities.Precio;
import ar.com.ventas.entities.Rubro;
import ar.com.ventas.entities.Servicio;
import ar.com.ventas.estructuras.Constantes;
import ar.com.ventas.services.ConsorcioService;
import ar.com.ventas.services.ImporteService;
import ar.com.ventas.services.PrecioService;
import ar.com.ventas.services.RubroService;
import ar.com.ventas.services.ServicioService;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Mario
 */
public class ModificarServicioFrame extends javax.swing.JFrame {

    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    private DecimalFormat dfp = new DecimalFormat("#0");
    private DecimalFormat df = new DecimalFormat("#0.00");
    private Date fecha;
    private Integer c;
    private Integer r;
    private List<Precio> precios;
    private Consorcio consorcio;
    private List<Consorcio> consorcios;
    private List<Rubro> rubros;
    private List<Importe> importes;
    private Rubro rubro;
    private Servicio servicio;

    /**
     * Creates new form NuevoTrabajoFrame
     *
     * @param servicio
     */
    public ModificarServicioFrame(Servicio servicio) {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(Constantes.getR(), Constantes.getG(), Constantes.getB()));
        this.setLocationRelativeTo(null);
//        setExtendedState(this.MAXIMIZED_BOTH);
        this.servicio = servicio;
        limpiarCampos();
        llenarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        volverBtn = new javax.swing.JButton();
        guardarBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fechaTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rubroTxt = new javax.swing.JTextField();
        consorcioTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cantidadCuotasTxt = new javax.swing.JTextField();
        comboP = new javax.swing.JComboBox<>();
        caracteristicasTxt = new javax.swing.JTextField();
        activoChk = new javax.swing.JCheckBox();
        fisicoQuimicoCbx = new javax.swing.JCheckBox();
        bacteriologicoCbx = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        ultimoServicioTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        combo1 = new javax.swing.JComboBox<>();
        combo2 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("MODIFICAR SERVICIO");

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        guardarBtn.setText("Guardar");
        guardarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Consorcio:");

        jLabel2.setText("Fecha:");

        fechaTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fechaTxt.setText("FECHA");
        fechaTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fechaTxtKeyPressed(evt);
            }
        });

        jLabel4.setText("Rubro:");

        rubroTxt.setText("RUBRO");

        consorcioTxt.setText("CONSORCIO");

        jLabel3.setText("Cantidad de Cuotas:");

        jLabel5.setText("Periodicidad:");

        jLabel6.setText("Características:");

        cantidadCuotasTxt.setText("CANT.CUOTAS");
        cantidadCuotasTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cantidadCuotasTxtKeyPressed(evt);
            }
        });

        comboP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        caracteristicasTxt.setText("CARACTERISTICAS");
        caracteristicasTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                caracteristicasTxtKeyPressed(evt);
            }
        });

        activoChk.setText("Activo");

        fisicoQuimicoCbx.setText("Físico Químico");

        bacteriologicoCbx.setText("Bacteriológico");

        jLabel7.setText("Fecha último Servicio:");

        ultimoServicioTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ultimoServicioTxt.setText("ULT_SERV");
        ultimoServicioTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ultimoServicioTxtKeyPressed(evt);
            }
        });

        jLabel8.setText("Respete Formato:>>   DD/MM/AAAA");

        jLabel9.setText("PAGO A OPERARIO SOLO:");

        jLabel10.setText("PAGO A OPERARIO ACOMPAÑADO:");

        combo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        combo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(guardarBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volverBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bacteriologicoCbx)
                            .addComponent(fisicoQuimicoCbx)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ultimoServicioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8))
                            .addComponent(jLabel10))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cantidadCuotasTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(158, 158, 158)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(comboP, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 175, Short.MAX_VALUE)
                                        .addComponent(activoChk))
                                    .addComponent(caracteristicasTxt)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(fechaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rubroTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(consorcioTxt)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(90, 90, 90)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(combo2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(combo1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(203, 203, 203)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fechaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(rubroTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(consorcioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(cantidadCuotasTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(activoChk))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(caracteristicasTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bacteriologicoCbx)
                .addGap(18, 18, 18)
                .addComponent(fisicoQuimicoCbx)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ultimoServicioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(combo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volverBtn)
                    .addComponent(guardarBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void guardarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarBtnActionPerformed
        guardar();
    }//GEN-LAST:event_guardarBtnActionPerformed

    private void fechaTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fechaTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            cantidadCuotasTxt.requestFocus();
        }
    }//GEN-LAST:event_fechaTxtKeyPressed

    private void cantidadCuotasTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadCuotasTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            caracteristicasTxt.requestFocus();
        }
    }//GEN-LAST:event_cantidadCuotasTxtKeyPressed

    private void caracteristicasTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_caracteristicasTxtKeyPressed

    }//GEN-LAST:event_caracteristicasTxtKeyPressed

    private void ultimoServicioTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ultimoServicioTxtKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ultimoServicioTxtKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarServicioFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarServicioFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarServicioFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarServicioFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarServicioFrame(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox activoChk;
    private javax.swing.JCheckBox bacteriologicoCbx;
    private javax.swing.JTextField cantidadCuotasTxt;
    private javax.swing.JTextField caracteristicasTxt;
    private javax.swing.JComboBox<String> combo1;
    private javax.swing.JComboBox<String> combo2;
    private javax.swing.JComboBox<String> comboP;
    private javax.swing.JTextField consorcioTxt;
    private javax.swing.JTextField fechaTxt;
    private javax.swing.JCheckBox fisicoQuimicoCbx;
    private javax.swing.JButton guardarBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField rubroTxt;
    private javax.swing.JTextField ultimoServicioTxt;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void volver() {
        ModificarServiciosFrame mf = new ModificarServiciosFrame();
        mf.setVisible(true);
        this.dispose();
    }

    private void llenarCombo() {
        comboP.removeAllItems();
        comboP.addItem("");
        for (int i = 0; i < 13; i++) {
            comboP.addItem(dfp.format(i));
        }
        int rowP = servicio.getPeriodicidad() + 1;
        comboP.setSelectedIndex(rowP);
        if (servicio.getActivo()) {
            activoChk.setSelected(true);
        } else {
            activoChk.setSelected(false);
        }
        combo1.removeAllItems();
        combo2.removeAllItems();
        combo1.addItem("");
        combo2.addItem("");
        importes = null;
        try {
            importes = new ImporteService().getAllImportesActivos();
        } catch (Exception ex) {
            Logger.getLogger(NuevoServicioFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (importes != null && !importes.isEmpty()) {
            for (Importe im : importes) {
                combo1.addItem(im.getDetalle());
                combo2.addItem(im.getDetalle());
            }
        }
    }

    private void limpiarCampos() {
        llenarCombo();
        fecha = servicio.getFecha();
        consorcio = servicio.getConsorcio();
        rubro = servicio.getRubro();
        consorcioTxt.setText(consorcio.getDomicilio().getCalle() + " "
                + consorcio.getDomicilio().getNumero());
        fechaTxt.setText(sdf.format(fecha));
        rubroTxt.setText(rubro.getDetalle());
        rubroTxt.setEditable(false);
        consorcioTxt.setEditable(false);
        cantidadCuotasTxt.setText(servicio.getCantidadCuotas().toString());
        cantidadCuotasTxt.requestFocus();
        ultimoServicioTxt.setText("");
    }

    private void guardar() {
        if (validar()) {
            if (activoChk.isSelected()) {
                servicio.setActivo(true);
            } else {
                servicio.setActivo(false);
            }
            Date fe = new Date();
            try {
                fe = sdf.parse(ultimoServicioTxt.getText());
            } catch (ParseException ex) {
                Logger.getLogger(ModificarServicioFrame.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "ERROR EN FECHA ULTIMO SERVICIO");
                ultimoServicioTxt.requestFocus();
                return;
            }
            servicio.setUltimoTrabajo(fe);
            int cantidad = Integer.valueOf(cantidadCuotasTxt.getText());
            servicio.setCantidadCuotas(cantidad);
            servicio.setCaracteristicas(caracteristicasTxt.getText());
            int rowP = comboP.getSelectedIndex();
            servicio.setPeriodicidad(rowP - 1);
            if (fisicoQuimicoCbx.isSelected()) {
                servicio.setFisicoQuimico(true);
            } else {
                servicio.setFisicoQuimico(false);
            }
            if (bacteriologicoCbx.isSelected()) {
                servicio.setBacteriologico(true);
            } else {
                servicio.setBacteriologico(false);
            }
            int row1 = combo1.getSelectedIndex();
            int row2 = combo2.getSelectedIndex();
            servicio.setImporte1(importes.get(row1));
            servicio.setImporte2(importes.get(row2));
            try {
                new ServicioService().updateServicio(servicio);
                JOptionPane.showMessageDialog(this, "SERVICIO GUARDADO CORRECTAMENTE");
            } catch (Exception ex) {
                Logger.getLogger(ModificarServicioFrame.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "ERROR Nro. 354 GUARDANDO SERVICIO");
                return;
            }
            volver();
        }
    }

    private boolean validar() {
        int row1 = combo1.getSelectedIndex();
        if(row1 < 1){
            JOptionPane.showMessageDialog(this, "DEBE INGRESAR SELECCIONAR UN IMPORTE");
            combo1.requestFocus();
            return false;
        }
        int row2 = combo2.getSelectedIndex();
        if(row2 < 1){
            JOptionPane.showMessageDialog(this, "DEBE INGRESAR SELECCIONAR UN IMPORTE");
            combo2.requestFocus();
            return false;
        }
        if (cantidadCuotasTxt.getText().isEmpty()) {
            cantidadCuotasTxt.setText("0");
        }
        int rowP = comboP.getSelectedIndex();
        if (rowP < 1) {
            JOptionPane.showMessageDialog(this, "DEBE INGRESAR UNA PERIODICIDAD");
            comboP.requestFocus();
            return false;
        }
        if(ultimoServicioTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "DEBE INGRESAR UNA FECHA DE ULTIMO SERVICIO");
            ultimoServicioTxt.requestFocus();
            return false;
        }
        return true;
    }

    private void llenarCampos() {
        llenarCombo();
        consorcio = servicio.getConsorcio();
        rubro = servicio.getRubro();
        consorcioTxt.setText(consorcio.getDomicilio().getCalle() + " "
                + consorcio.getDomicilio().getNumero());
        fechaTxt.setText(sdf.format(servicio.getFecha()));
        rubroTxt.setText(rubro.getDetalle());
        rubroTxt.setEditable(false);
        consorcioTxt.setEditable(false);
        cantidadCuotasTxt.setText(servicio.getCantidadCuotas().toString());
        if (servicio.getBacteriologico() != null) {
            if (servicio.getBacteriologico()) {
                bacteriologicoCbx.setSelected(true);
            } else {
                bacteriologicoCbx.setSelected(false);
            }
        } else {
            bacteriologicoCbx.setSelected(false);
        }
        if (servicio.getFisicoQuimico() != null) {
            if (servicio.getFisicoQuimico()) {
                fisicoQuimicoCbx.setSelected(true);
            } else {
                fisicoQuimicoCbx.setSelected(false);
            }
        } else {
            fisicoQuimicoCbx.setSelected(false);
        }
        if (servicio.getActivo()) {
            activoChk.setSelected(true);
        } else {
            activoChk.setSelected(false);
        }
        caracteristicasTxt.setText(servicio.getCaracteristicas());
        comboP.setSelectedIndex(servicio.getPeriodicidad() + 1);
        cantidadCuotasTxt.requestFocus();
        if(servicio.getUltimoTrabajo() != null){
            ultimoServicioTxt.setText(sdf.format(servicio.getUltimoTrabajo()));
        } else {
            ultimoServicioTxt.setText(sdf.format(new Date()));
        }
        int x = 1;
        int pos1 = 0;
        int pos2 = 0;
        Importe imp1 = servicio.getImporte1();
        Importe imp2 = servicio.getImporte2();
        for(Importe i_x:importes){
            if(i_x.getId().equals(imp1.getId())){
                pos1 = x;
            }
            if(i_x.getId().equals(imp2.getId())){
                pos2=x;
            }
            x+=1;
        }
        combo1.setSelectedIndex(pos1);
        combo2.setSelectedIndex(pos2);
    }
}
