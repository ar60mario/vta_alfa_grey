/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.Contenido;
import ar.com.ventas.entities.EstructuraServicio;
import ar.com.ventas.entities.Persona;
import ar.com.ventas.estructuras.Constantes;
import ar.com.ventas.services.EstructuraServicioService;
import ar.com.ventas.services.PersonaService;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Mario
 */
public class ModificarTrabajoFrame2x extends javax.swing.JFrame {

    private Date fecha;
    private Integer c;
    private Integer s;
    private List<Contenido> contenidos;
    private List<Persona> personas;
    private Contenido contenido;

    /**
     * Creates new form ModificarTrabajoFrame
     */
    public ModificarTrabajoFrame2x(Date fecha, Integer c, Integer s, List<Contenido> contenidos, Contenido contenido) {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(Constantes.getR(), Constantes.getG(), Constantes.getB()));
        this.setLocationRelativeTo(null);
//        setExtendedState(this.MAXIMIZED_BOTH);
        this.fecha = fecha;
        this.c = c;
        this.s = s;
        this.contenidos = contenidos;
        this.contenido = contenido;
        llenarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        volverBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        campoTxt = new javax.swing.JTextField();
        ingreseFechaLbl = new javax.swing.JLabel();
        fechaTxt = new javax.swing.JTextField();
        guardarBtn = new javax.swing.JButton();
        ingresePersonaLbl = new javax.swing.JLabel();
        comboP = new javax.swing.JComboBox<>();
        ingreseTextoLbl = new javax.swing.JLabel();
        textoTxt = new javax.swing.JTextField();
        ingreseCantidadLbl = new javax.swing.JLabel();
        ingreseImporteLbl = new javax.swing.JLabel();
        confirmeOpcionLbl = new javax.swing.JLabel();
        cantidadTxt = new javax.swing.JTextField();
        importeTxt = new javax.swing.JTextField();
        comboO = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("MODIFICAR TRABAJO");

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Campo a Completar:");

        campoTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoTxt.setText("CAMPO");

        ingreseFechaLbl.setText("Ingrese Fecha:");

        fechaTxt.setText("FECHA");

        guardarBtn.setText("Guardar");
        guardarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarBtnActionPerformed(evt);
            }
        });

        ingresePersonaLbl.setText("Ingrese Persona:");

        comboP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ingreseTextoLbl.setText("Ingrese el Texto:");

        textoTxt.setText("TEXTO");

        ingreseCantidadLbl.setText("Ingrese Cantidad:");

        ingreseImporteLbl.setText("Ingrese Importe:");

        confirmeOpcionLbl.setText("Confirme Opci√≥n:");

        cantidadTxt.setText("CANTIDAD");

        importeTxt.setText("IMPORTE");

        comboO.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(guardarBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volverBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(ingreseFechaLbl)
                            .addComponent(ingresePersonaLbl)
                            .addComponent(ingreseTextoLbl)
                            .addComponent(ingreseCantidadLbl)
                            .addComponent(ingreseImporteLbl)
                            .addComponent(confirmeOpcionLbl))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textoTxt)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fechaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboP, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(comboO, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(importeTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cantidadTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)))
                                .addGap(0, 306, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingreseFechaLbl)
                    .addComponent(fechaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingresePersonaLbl)
                    .addComponent(comboP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingreseTextoLbl)
                    .addComponent(textoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingreseCantidadLbl)
                    .addComponent(cantidadTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingreseImporteLbl)
                    .addComponent(importeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmeOpcionLbl)
                    .addComponent(comboO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 247, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volverBtn)
                    .addComponent(guardarBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void guardarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarBtnActionPerformed
        guardar();
    }//GEN-LAST:event_guardarBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarTrabajoFrame2x.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarTrabajoFrame2x.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarTrabajoFrame2x.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarTrabajoFrame2x.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarTrabajoFrame2x(null, null, null, null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField campoTxt;
    private javax.swing.JTextField cantidadTxt;
    private javax.swing.JComboBox<String> comboO;
    private javax.swing.JComboBox<String> comboP;
    private javax.swing.JLabel confirmeOpcionLbl;
    private javax.swing.JTextField fechaTxt;
    private javax.swing.JButton guardarBtn;
    private javax.swing.JTextField importeTxt;
    private javax.swing.JLabel ingreseCantidadLbl;
    private javax.swing.JLabel ingreseFechaLbl;
    private javax.swing.JLabel ingreseImporteLbl;
    private javax.swing.JLabel ingresePersonaLbl;
    private javax.swing.JLabel ingreseTextoLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField textoTxt;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void llenarCampos() {
        ocultarTodo();
        llenarCombo();
//        System.out.println(fecha);
//        System.out.println(c);
//        System.out.println(s);
//        System.out.println(contenido.getConcepto());
        Long lg = contenido.getConcepto();
//        System.out.println(lg);
        EstructuraServicio es = null;
        try {
            es = new EstructuraServicioService().getEstructuraServicioActivoById(lg);
        } catch (Exception ex) {
            Logger.getLogger(ModificarTrabajoFrame2x.class.getName()).log(Level.SEVERE, null, ex);
        }
//        System.out.println(es.getContenido());
//        System.out.println(es.getCampoEstructura());
        int ce = es.getCampoEstructura();
//        System.exit(0);
        campoTxt.setText(es.getContenido());
        switch (ce) {
            case 1:
                fechaTxt.setText("");
                ingreseFechaLbl.setVisible(true);
                fechaTxt.setVisible(true);
                fechaTxt.requestFocus();
                break;
            case 2:
                fechaTxt.setText("");
                ingreseFechaLbl.setVisible(true);
                fechaTxt.setVisible(true);
                fechaTxt.requestFocus();
                break;
            case 3:
                fechaTxt.setText("");
                ingreseFechaLbl.setVisible(true);
                fechaTxt.setVisible(true);
                fechaTxt.requestFocus();
                break;
            case 4:
                fechaTxt.setText("");
                ingreseFechaLbl.setVisible(true);
                fechaTxt.setVisible(true);
                fechaTxt.requestFocus();
                break;
            case 5:
                fechaTxt.setText("");
                ingreseFechaLbl.setVisible(true);
                fechaTxt.setVisible(true);
                fechaTxt.requestFocus();
                break;
            case 6:
                ingresePersonaLbl.setVisible(true);
                comboP.setVisible(true);
                comboP.requestFocus();
                break;
            case 7:
                ingreseTextoLbl.setVisible(true);
                textoTxt.setVisible(true);
                textoTxt.setText("");
                textoTxt.requestFocus();
                break;
            case 8:
                ingreseImporteLbl.setVisible(true);
                importeTxt.setVisible(true);
                importeTxt.setText("");
                importeTxt.requestFocus();
                break;
            case 9:
                ingreseCantidadLbl.setVisible(true);
                cantidadTxt.setVisible(true);
                cantidadTxt.setText("");
                cantidadTxt.requestFocus();
                break;
            case 10:
                confirmeOpcionLbl.setVisible(true);
                comboO.setVisible(true);
                comboO.requestFocus();
                break;
            case 11:
                confirmeOpcionLbl.setVisible(true);
                comboO.setVisible(true);
                comboO.requestFocus();
                break;
            case 12:
                confirmeOpcionLbl.setVisible(true);
                comboO.setVisible(true);
                comboO.requestFocus();
                break;
            default:
        }
//        System.out.println(lg);
//        System.out.println("");
//        System.out.println(" _ ");
//        for (Contenido c : contenidos) {
//            System.out.println(c.getConcepto() + "x");
//            System.out.println(c.getContenido() + "x");
//            System.out.println(c.getTrabajo().getServicio() + "x");
//            System.out.println(" ");
//        }
    }

    private void volver() {
        System.out.println(fecha);
        System.out.println(contenidos.get(c-1).getContenido());
        System.out.println(contenidos.get(c-1).getConcepto());
        EstructuraServicio es = null;
        try {
            es = new EstructuraServicioService().getEstructuraServicioActivoById(contenidos.get(c-1).getConcepto());
        } catch (Exception ex) {
            Logger.getLogger(ModificarTrabajoFrame2x.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(es.getContenido());
//        System.exit(0);
//        NuevoTrabajoFrame ntf = new NuevoTrabajoFrame(fecha, c, s, contenidos);
//        ntf.setVisible(true);
        this.dispose();
    }

    private void guardar() {
        contenido.setContenido(fechaTxt.getText());
        contenidos.set(c - 1, contenido);
        volver();
    }

    private void ocultarTodo() {
        ingreseFechaLbl.setVisible(false);
        ingresePersonaLbl.setVisible(false);
        ingreseTextoLbl.setVisible(false);
        ingreseCantidadLbl.setVisible(false);
        ingreseImporteLbl.setVisible(false);
        confirmeOpcionLbl.setVisible(false);
        fechaTxt.setVisible(false);
        comboP.setVisible(false);
        textoTxt.setVisible(false);
        cantidadTxt.setVisible(false);
        importeTxt.setVisible(false);
        comboO.setVisible(false);
    }

    private void llenarCombo() {
        comboP.removeAllItems();
        comboP.addItem("");
        personas = null;
        try {
            personas = new PersonaService().getAllPersonasActivas();
        } catch (Exception ex) {
            Logger.getLogger(ModificarTrabajoFrame2x.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(personas != null && !personas.isEmpty()){
            for(Persona pe:personas){
                comboP.addItem(pe.getApellidoNombre());
            }
        }
        comboO.removeAllItems();
        comboO.addItem("");
        comboO.addItem("SI");
        comboO.addItem("NO");
    }
}
