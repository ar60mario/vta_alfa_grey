/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.Consorcio;
import ar.com.ventas.entities.Domicilio;
import ar.com.ventas.entities.RenglonTrabajo;
import ar.com.ventas.entities.Servicio;
import ar.com.ventas.entities.Trabajo;
import ar.com.ventas.estructuras.Constantes;
import ar.com.ventas.main.MainFrame;
import ar.com.ventas.services.ConsorcioService;
import ar.com.ventas.services.RenglonTrabajoService;
import ar.com.ventas.services.ServicioService;
import ar.com.ventas.services.TrabajoService;
import ar.com.ventas.util.UtilFrame;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mario
 */
public class TrabajosRealizadosFrame extends javax.swing.JFrame {

    private List<Consorcio> consorcios;
    private List<Trabajo> trabajos = null;
    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

    /**
     * Creates new form TrabajosRealizadosFrame
     */
    public TrabajosRealizadosFrame() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(Constantes.getR(), Constantes.getG(), Constantes.getB()));
        this.setLocationRelativeTo(null);
//        setExtendedState(this.MAXIMIZED_BOTH);
        limpiarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        volverBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        comboC = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        modificarBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        calleTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nuevaFechaTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        periodicidadTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("TRABAJOS REALIZADOS POR CONSORCIO");

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Consorcio:");

        comboC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCActionPerformed(evt);
            }
        });
        comboC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboCKeyPressed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FECHA", "TRABAJO", "CARACTERISTICAS", "TRAB_PENDIENTES", "NRO FC", "TITULAR FC", "IMPORTE FC", "RENOVADO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setPreferredWidth(15);
            tabla.getColumnModel().getColumn(1).setPreferredWidth(100);
            tabla.getColumnModel().getColumn(2).setPreferredWidth(200);
            tabla.getColumnModel().getColumn(3).setPreferredWidth(200);
            tabla.getColumnModel().getColumn(7).setPreferredWidth(5);
        }

        modificarBtn.setText("Modificar");
        modificarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Calle:");

        calleTxt.setText("CALLE");
        calleTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                calleTxtKeyPressed(evt);
            }
        });

        jLabel3.setText("Nueva Fecha:");

        nuevaFechaTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nuevaFechaTxt.setText("NUE_FECH");
        nuevaFechaTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nuevaFechaTxtKeyPressed(evt);
            }
        });

        jLabel4.setText("Formato Fecha >>  DD/MM/AAAA");

        jLabel5.setText("Periodicidad:");

        periodicidadTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        periodicidadTxt.setText("PERIODI");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(nuevaFechaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(modificarBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volverBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboC, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(calleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(154, 154, 154)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(periodicidadTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 256, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(calleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(periodicidadTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volverBtn)
                    .addComponent(modificarBtn)
                    .addComponent(jLabel3)
                    .addComponent(nuevaFechaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void modificarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarBtnActionPerformed
        int row = tabla.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UN TRABAJO PARA MODIFICAR");
            return;
        }
        if (nuevaFechaTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "INGRESE NUEVA FECHA PRIMERO");
            return;
        }
        String nf = nuevaFechaTxt.getText();
        int largo = nf.length();
        if (largo == 10) {
            modificar(row);
        }
        nf = UtilFrame.fecha(nf);
        nuevaFechaTxt.setText(nf);
    }//GEN-LAST:event_modificarBtnActionPerformed

    private void comboCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCActionPerformed
        int row = comboC.getSelectedIndex();
        if (evt.getModifiers() == 16) {
            if (row > 0) {
                buscar();
            }
        }
    }//GEN-LAST:event_comboCActionPerformed

    private void calleTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calleTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            buscar2();
        }
    }//GEN-LAST:event_calleTxtKeyPressed

    private void comboCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboCKeyPressed
        int row = comboC.getSelectedIndex();
        if (evt.getKeyCode() == 10) {
            if (row > 0) {
                buscar();
            }
        }
    }//GEN-LAST:event_comboCKeyPressed

    private void nuevaFechaTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nuevaFechaTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            int row = tabla.getSelectedRow();
            if (row < 0) {
                JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UN TRABAJO PARA MODIFICAR");
                return;
            }
            String nf = nuevaFechaTxt.getText();
            int largo = nf.length();
            if (largo == 10) {
                modificar(row);
            }
            nf = UtilFrame.fecha(nf);
            nuevaFechaTxt.setText(nf);
        }
    }//GEN-LAST:event_nuevaFechaTxtKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TrabajosRealizadosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TrabajosRealizadosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TrabajosRealizadosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrabajosRealizadosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TrabajosRealizadosFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField calleTxt;
    private javax.swing.JComboBox<String> comboC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificarBtn;
    private javax.swing.JTextField nuevaFechaTxt;
    private javax.swing.JTextField periodicidadTxt;
    private javax.swing.JTable tabla;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void volver() {
        MainFrame mf = new MainFrame();
        mf.setVisible(true);
        this.dispose();
    }

    private void modificar(int row) {
        String nuevaFecha = nuevaFechaTxt.getText();
        Date nf = new Date();
        try {
            nf = sdf.parse(nuevaFecha);
        } catch (ParseException ex) {
            Logger.getLogger(TrabajosRealizadosFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "ERROR EN FECHA");
            return;
        }
        Trabajo trabajo = trabajos.get(row);
        if (trabajo.getRenovado()) {
            JOptionPane.showMessageDialog(this, "SOLO PUEDE MDIFICAR UN TRABAJO SIN RENOVAR");
            return;
        }
        RenglonTrabajo renglon = null;
        try {
            renglon = new RenglonTrabajoService().getRenglonFechaByTrabajoActivo(trabajo);
        } catch (Exception ex) {
            Logger.getLogger(TrabajosRealizadosFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (renglon != null) {
            Date fe1;
            try {
                fe1 = sdf.parse(renglon.getContenido());
            } catch (ParseException ex) {
                Logger.getLogger(TrabajosRealizadosFrame.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "ERROR PROCESANDO FECHA GUARDADA");
                return;
            }
            int a = JOptionPane.showConfirmDialog(this, "CONFIRME CAMBIAR LA FECHA DEL TRABAJO A: "+sdf.format(nf), "Atención", JOptionPane.YES_NO_OPTION);
            if (a==0) {
                trabajo.setFecha(nf);
                renglon.setContenido(sdf.format(nf));
                try {
                    new TrabajoService().updateTrabajo(trabajo);
                    new RenglonTrabajoService().updateRenglonTrabajo(renglon);
                } catch (Exception ex) {
                    Logger.getLogger(TrabajosRealizadosFrame.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "ERROR 372 - GUARDANDO TRABAJO");
                    return;
                }
                JOptionPane.showMessageDialog(this, "FECHA ACTUALLIZADA");
            }
        }
    }

    private void buscar() {
        int row = comboC.getSelectedIndex();
        if (row > 0) {
            UtilFrame.limpiarTabla(tabla);
            Consorcio consorcio = consorcios.get(row - 1);
            trabajos = null;
            try {
                trabajos = new TrabajoService().getTrabajosByCertificadosEmitido(consorcio);
            } catch (Exception ex) {
                Logger.getLogger(TrabajosRealizadosFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (trabajos != null && !trabajos.isEmpty()) {
                Servicio ser = trabajos.get(0).getServicio();
                periodicidadTxt.setText(ser.getPeriodicidad().toString());
                DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
                for (Trabajo tr : trabajos) {
                    Object o[] = new Object[5];
                    String renovado;
                    o[0] = sdf.format(tr.getFecha());
                    o[1] = tr.getServicio().getRubro().getDetalle();
                    if (tr.getRenovado()) {
                        renovado = "SI";
                    } else {
                        renovado = "NO";
                    }
                    String caract = "";
                    String pendientes = "";
                    try {
                        caract = new RenglonTrabajoService().getCaracteristicasByTrabajo(tr);
                        pendientes = new RenglonTrabajoService().getPendientesByTrabajo(tr);
                    } catch (Exception ex) {
                        Logger.getLogger(TrabajosRealizadosFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    o[2] = caract;
                    o[3] = pendientes;
                    o[4] = renovado;
                    tbl.addRow(o);
                }
                tabla.setModel(tbl);
            }
        }
    }

    private void llenarCombo() {
        consorcios = null;
        comboC.removeAllItems();
        comboC.addItem("");
        String filtro = calleTxt.getText();
        try {
            consorcios = new ConsorcioService().getAllConsorciosActivosByFiltro(filtro);
        } catch (Exception ex) {
            Logger.getLogger(TrabajosRealizadosFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (consorcios != null && !consorcios.isEmpty()) {
            for (Consorcio c : consorcios) {
                Domicilio dm = c.getDomicilio();
                String dom = dm.getCalle() + " " + dm.getNumero();
                comboC.addItem(dom);
            }
            comboC.requestFocus();
            comboC.addFocusListener(null);
            comboC.showPopup();
        }
    }

    private void buscar2() {
        if (!calleTxt.getText().isEmpty()) {
            llenarCombo();
        }
    }

    private void limpiarCampos() {
        nuevaFechaTxt.setText("");
        periodicidadTxt.setText("");
        calleTxt.setText("");
        comboC.removeAllItems();
        comboC.addItem("");
    }
}
