/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.CategoriaMonotributo;
import ar.com.ventas.entities.Domicilio;
import ar.com.ventas.entities.Persona;
import ar.com.ventas.entities.TicketTime;
import ar.com.ventas.entities.TitularCuit;
import ar.com.ventas.estructuras.Constantes;
import ar.com.ventas.estructuras.TipoResponsable;
import ar.com.ventas.services.CategoriaMonotributoService;
import ar.com.ventas.services.TicketTimeService;
import ar.com.ventas.services.TitularCuitService;
import java.io.File;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Mario
 */
public class TitularCuitFrame extends javax.swing.JFrame {

    private Persona persona;
    private TitularCuit titular;
    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    private DecimalFormat df = new DecimalFormat("#0.00");
    private List<TipoResponsable> tipoInscripcion = new ArrayList<>();
    private List<CategoriaMonotributo> categorias;
    private Integer o = 0;

    /**
     * Creates new form TitularCuitFrame
     */
    public TitularCuitFrame(Persona persona) {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(Constantes.getR(), Constantes.getG(), Constantes.getB()));
        this.setLocationRelativeTo(null);
        setExtendedState(this.MAXIMIZED_BOTH);
        this.persona = persona;
        llenarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        observacionesTxt = new javax.swing.JTextArea();
        guardarBtn = new javax.swing.JButton();
        volverBtn = new javax.swing.JButton();
        personaTxt = new javax.swing.JTextField();
        nombreFantasiaTxt = new javax.swing.JTextField();
        calleTxt = new javax.swing.JTextField();
        numeroTxt = new javax.swing.JTextField();
        pisoDtoTxt = new javax.swing.JTextField();
        codigoPostalTxt = new javax.swing.JTextField();
        localidadTxt = new javax.swing.JTextField();
        provinciaTxt = new javax.swing.JTextField();
        cuitTxt = new javax.swing.JTextField();
        iibbTxt = new javax.swing.JTextField();
        fechaInicioActividadesTxt = new javax.swing.JTextField();
        sucursalTxt = new javax.swing.JTextField();
        limiteTxt = new javax.swing.JTextField();
        telefonoTxt = new javax.swing.JTextField();
        mailTxt = new javax.swing.JTextField();
        comboI = new javax.swing.JComboBox<>();
        comboM = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        activoChk = new javax.swing.JCheckBox();
        jLabel31 = new javax.swing.JLabel();
        totalLimiteFacturarTxt = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        asignarLogoBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("TITULAR DE CUIT");

        jLabel1.setText("Persona:");

        jLabel2.setText("Nombre de Fantasía:");

        jLabel3.setText("Domicilio Fiscal Calle:");

        jLabel4.setText("Número:");

        jLabel5.setText("Piso Dto.:");

        jLabel6.setText("Código Postal:");

        jLabel7.setText("Localidad:");

        jLabel8.setText("Provincia:");

        jLabel9.setText("CUIT:");

        jLabel10.setText("IIBB:");

        jLabel11.setText("Fecha Inicio Actividades:");

        jLabel12.setText("Tipo Inscripción:");

        jLabel13.setText("Categoría Monotributo:");

        jLabel14.setText("Sucursal:");

        jLabel15.setText("Facturación por Categoría:");

        jLabel16.setText("Teléfono:");

        jLabel17.setText("Mail:");

        jLabel18.setText("Observaciones:");

        observacionesTxt.setColumns(20);
        observacionesTxt.setRows(5);
        jScrollPane1.setViewportView(observacionesTxt);

        guardarBtn.setText("Guardar");
        guardarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarBtnActionPerformed(evt);
            }
        });

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        personaTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        personaTxt.setText("PERSONA");

        nombreFantasiaTxt.setText("NOMBRE FANTASIA");

        calleTxt.setText("DOMICILIO CALLE");

        numeroTxt.setText("NUMERO");

        pisoDtoTxt.setText("PISO DTO");

        codigoPostalTxt.setText("C POSTAL");

        localidadTxt.setText("LOCALIDAD");

        provinciaTxt.setText("PROVINCIA");

        cuitTxt.setText("CUIT");

        iibbTxt.setText("IIBB");

        fechaInicioActividadesTxt.setText("FECHA INICIO ACT");

        sucursalTxt.setText("SUCURSAL");

        limiteTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        limiteTxt.setText("LIMITA FACT");

        telefonoTxt.setText("TELEFONO");

        mailTxt.setText("MAIL");

        comboI.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMActionPerformed(evt);
            }
        });
        comboM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboMKeyPressed(evt);
            }
        });

        jLabel19.setText("*");

        jLabel20.setText("*");

        jLabel21.setText("*");

        jLabel22.setText("*");

        jLabel23.setText("*");

        jLabel24.setText("*");

        jLabel25.setText("*");

        jLabel26.setText("*");

        jLabel27.setText("*");

        jLabel28.setText("*");

        jLabel29.setText("*");

        jLabel30.setText("*");

        activoChk.setText("Activo");

        jLabel31.setText("Total a Facturar:");

        totalLimiteFacturarTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalLimiteFacturarTxt.setText("TOTAL LIMITE A FACTURAR");

        jLabel32.setText("LOGO");

        asignarLogoBtn.setText("Asignar");
        asignarLogoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asignarLogoBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(guardarBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volverBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel7)
                                                    .addComponent(jLabel9))
                                                .addGap(47, 47, 47)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(cuitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel25)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel10))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(localidadTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel23)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel8)))
                                                .addGap(13, 13, 13))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane1)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addComponent(jLabel11)
                                                            .addGap(18, 18, 18)
                                                            .addComponent(fechaInicioActividadesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(8, 8, 8)
                                                            .addComponent(jLabel27))
                                                        .addComponent(jLabel18)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLabel14)
                                                                .addComponent(jLabel16))
                                                            .addGap(57, 57, 57)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(layout.createSequentialGroup()
                                                                    .addComponent(sucursalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                    .addComponent(jLabel30))
                                                                .addGroup(layout.createSequentialGroup()
                                                                    .addComponent(telefonoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                    .addComponent(jLabel17)))))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel12)
                                                        .addGap(41, 41, 41)
                                                        .addComponent(comboI, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(7, 7, 7)
                                                        .addComponent(jLabel29)))
                                                .addGap(8, 8, 8)))
                                        .addGap(10, 10, 10))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(35, 35, 35)
                                                .addComponent(calleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel21)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                                .addComponent(jLabel4))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(57, 57, 57)
                                                .addComponent(pisoDtoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel6))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel31)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel15)
                                                        .addComponent(jLabel13)))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(provinciaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel24))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(codigoPostalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel22))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(iibbTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(comboM, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel26)
                                            .addComponent(jLabel28)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(mailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(numeroTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel20)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel32)
                                                .addComponent(activoChk)))
                                        .addComponent(asignarLogoBtn))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(totalLimiteFacturarTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(limiteTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(102, 102, 102)
                                .addComponent(personaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(34, 34, 34)
                                .addComponent(nombreFantasiaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19)))
                        .addGap(0, 212, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(personaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nombreFantasiaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(asignarLogoBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(calleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numeroTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(activoChk))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(pisoDtoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codigoPostalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(localidadTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(provinciaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(cuitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iibbTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(fechaInicioActividadesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(comboI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(sucursalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(limiteTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(totalLimiteFacturarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(telefonoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarBtn)
                    .addComponent(volverBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarBtnActionPerformed
        guardar();
    }//GEN-LAST:event_guardarBtnActionPerformed

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void comboMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMActionPerformed
        if (evt.getModifiers() == 16) {
            int row = comboM.getSelectedIndex();
            if (row > 0) {
                cargarImporte();
            }
        }
    }//GEN-LAST:event_comboMActionPerformed

    private void comboMKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboMKeyPressed
        if (evt.getKeyCode() == 10) {
            int row = comboM.getSelectedIndex();
            if (row > 0) {
                cargarImporte();
            }
        }
    }//GEN-LAST:event_comboMKeyPressed

    private void asignarLogoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asignarLogoBtnActionPerformed
        asignarLogo();
    }//GEN-LAST:event_asignarLogoBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TitularCuitFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TitularCuitFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TitularCuitFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TitularCuitFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TitularCuitFrame(null).setVisible(true);
            }
        });
    }

    private void llenarCampos() {
        llenarCombos();
        try {
            titular = new TitularCuitService().getTitularDeCuitActivoByPersona(persona);
            if (titular != null) {
                o = 1;
            }
        } catch (Exception ex) {
            Logger.getLogger(TitularCuitFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        personaTxt.setText(persona.getApellidoNombre());
        personaTxt.setEditable(false);
        if (o == 1) {
            activoChk.setVisible(true);
            if (titular.getActivo()) {
                activoChk.setSelected(true);
            } else {
                activoChk.setSelected(false);
            }
            nombreFantasiaTxt.setText(titular.getNombreFantasia());
            nombreFantasiaTxt.requestFocus();
            calleTxt.setText(titular.getDomicilio().getCalle());
            numeroTxt.setText(titular.getDomicilio().getNumero());
            pisoDtoTxt.setText(titular.getDomicilio().getPisoDto());
            codigoPostalTxt.setText(titular.getDomicilio().getCodigoPostal());
            localidadTxt.setText(titular.getDomicilio().getLocalidad());
            provinciaTxt.setText(titular.getDomicilio().getProvincia());
            cuitTxt.setText(titular.getCuit());
            iibbTxt.setText(titular.getIibb());
            fechaInicioActividadesTxt.setText(sdf.format(titular.getFechaInicioActividades()));
            if (titular.getLimiteFacturar() != null) {
                totalLimiteFacturarTxt.setText(df.format(titular.getLimiteFacturar()));
            } else {
                totalLimiteFacturarTxt.setText(df.format(0.0));
            }
            String cate = titular.getCategoria();
            int rowI = 0;
            int counI = 0;
            Double limiteF = 0.0;
            for (CategoriaMonotributo cm : categorias) {
                if (cm.getCategoria().equals(cate)) {
                    rowI = counI;
                    limiteF = cm.getIngresosBrutos();
                    break;
                }
                counI += 1;
            }
            comboM.setSelectedIndex(rowI + 1);
            int codM = titular.getTipoInscipcion();
            int rowM = 0;
            int counM = 1;
            for (TipoResponsable tr : tipoInscripcion) {
//                System.out.print(tr.getCodigo());
//                System.out.print(" ");
//                System.out.println(codM);
                if (tr.getCodigo().equals(codM)) {
                    rowM = counM;
                    break;
                }
                counM += 1;
            }
//            System.out.println(rowM);
//            System.exit(0);
            comboI.setSelectedIndex(rowM);
            limiteTxt.setText(df.format(limiteF));
            sucursalTxt.setText(titular.getSucursal().toString());
            telefonoTxt.setText(titular.getTelefono());
            mailTxt.setText(titular.getMail());
            observacionesTxt.setText(titular.getObservaciones());
        } else {
            activoChk.setVisible(false);
            nombreFantasiaTxt.setText("");
            nombreFantasiaTxt.requestFocus();
            calleTxt.setText("");
            numeroTxt.setText("");
            pisoDtoTxt.setText("");
            codigoPostalTxt.setText("");
            localidadTxt.setText("");
            provinciaTxt.setText("");
            cuitTxt.setText("");
            iibbTxt.setText("");
            fechaInicioActividadesTxt.setText("");
            limiteTxt.setText("");
            sucursalTxt.setText("");
            telefonoTxt.setText("");
            mailTxt.setText("");
            observacionesTxt.setText("");
            totalLimiteFacturarTxt.setText("");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox activoChk;
    private javax.swing.JButton asignarLogoBtn;
    private javax.swing.JTextField calleTxt;
    private javax.swing.JTextField codigoPostalTxt;
    private javax.swing.JComboBox<String> comboI;
    private javax.swing.JComboBox<String> comboM;
    private javax.swing.JTextField cuitTxt;
    private javax.swing.JTextField fechaInicioActividadesTxt;
    private javax.swing.JButton guardarBtn;
    private javax.swing.JTextField iibbTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField limiteTxt;
    private javax.swing.JTextField localidadTxt;
    private javax.swing.JTextField mailTxt;
    private javax.swing.JTextField nombreFantasiaTxt;
    private javax.swing.JTextField numeroTxt;
    private javax.swing.JTextArea observacionesTxt;
    private javax.swing.JTextField personaTxt;
    private javax.swing.JTextField pisoDtoTxt;
    private javax.swing.JTextField provinciaTxt;
    private javax.swing.JTextField sucursalTxt;
    private javax.swing.JTextField telefonoTxt;
    private javax.swing.JTextField totalLimiteFacturarTxt;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void llenarCombos() {
        comboI.removeAllItems();
        comboM.removeAllItems();
        comboI.addItem("");
        comboM.addItem("");
        categorias = null;
        try {
            categorias = new CategoriaMonotributoService().getAllCategoriasMonotributoActivos();
        } catch (Exception ex) {
            Logger.getLogger(TitularCuitFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (categorias != null && !categorias.isEmpty()) {
            for (CategoriaMonotributo c : categorias) {
                comboM.addItem(c.getCategoria());
            }
        }
        for (TipoResponsable tr : TipoResponsable.values()) {
            tipoInscripcion.add(tr);
            comboI.addItem(tr.getDescripcion());
        }
    }

    private void volver() {
        AbmPersonaFrame apf = new AbmPersonaFrame();
        apf.setVisible(true);
        this.dispose();
    }

    private void guardar() {
        if (validar()) {
            Domicilio domicilio;
            Boolean activo;
            if (o == 1) {
                domicilio = titular.getDomicilio();
                if (activoChk.isSelected()) {
                    activo = true;
                } else {
                    activo = false;
                }
            } else {
                domicilio = new Domicilio();
                titular = new TitularCuit();
                activo = true;
            }
            domicilio.setCalle(calleTxt.getText());
            domicilio.setNumero(numeroTxt.getText());
            domicilio.setPisoDto(pisoDtoTxt.getText());
            domicilio.setCodigoPostal(codigoPostalTxt.getText());
            domicilio.setLocalidad(localidadTxt.getText());
            domicilio.setProvincia(provinciaTxt.getText());
            titular.setDomicilio(domicilio);
            titular.setActivo(activo);
            int rowL = comboM.getSelectedIndex();
            Double limite = categorias.get(rowL - 1).getIngresosBrutos();
            titular.setLimiteFacturar(limite);
            int rowC = comboM.getSelectedIndex();
            String cat = categorias.get(rowC - 1).getCategoria();
            titular.setCategoria(cat);
            titular.setCuit(cuitTxt.getText());
            Date fecha1 = new Date();
            try {
                fecha1 = sdf.parse(fechaInicioActividadesTxt.getText());
            } catch (ParseException ex) {
                Logger.getLogger(TitularCuitFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            titular.setFechaInicioActividades(fecha1);
            titular.setIibb(iibbTxt.getText());
            titular.setMail(mailTxt.getText());
            titular.setNombreFantasia(nombreFantasiaTxt.getText());
            titular.setObservaciones(observacionesTxt.getText());
            titular.setPersona(persona);
            int sucursal = Integer.valueOf(sucursalTxt.getText());
            titular.setSucursal(sucursal);
            titular.setTelefono(telefonoTxt.getText());
            int rowI = comboI.getSelectedIndex();
            TipoResponsable tr = tipoInscripcion.get(rowI - 1);
            int codI = tr.getCodigo();
            titular.setTipoInscipcion(codI);
            if (!totalLimiteFacturarTxt.getText().isEmpty()) {
                Double limite2 = Double.valueOf(totalLimiteFacturarTxt.getText().replace(",", "."));
                titular.setLimiteFacturar(limite2);
            } else {
                titular.setLimiteFacturar(0.0);
            }
//            titular.setTotalFacturado6(0.0);
//            titular.setTotalFacturado12(0.0);
            titular.setUltimoNroFcA(0);
            titular.setUltimoNroFcB(0);
            titular.setUltimoNroFcC(0);
            titular.setUltimoNroNcA(0);
            titular.setUltimoNroNcB(0);
            titular.setUltimoNroNcC(0);
            titular.setUltimoNroPp(0);
            titular.setUltimoNroRc(0);
            try {
                if (o == 1) {
                    titular = new TitularCuitService().updateTitularCuit(titular);
                } else {
                    new TitularCuitService().saveTitularCuit(titular);
                    TicketTime tc = new TicketTime();
                    tc.setException("");
                    tc.setFecha(new Date());
                    tc.setHora(1);
                    tc.setMinuto(0);
                    tc.setSegundo(0);
                    tc.setSign("");
                    tc.setToken("");
                    tc.setTitular(titular);
                    new TicketTimeService().saveTicket(tc);
                }
            } catch (Exception ex) {
                Logger.getLogger(TitularCuitFrame.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "ERROR GUARDANDO TITULAR");
                return;
            }
            JOptionPane.showMessageDialog(this, "TITULAR GUARDADO CORRECTAMENTE");
            volver();
        }
    }

    private boolean validar() {
        int rowM = comboM.getSelectedIndex();
        int rowI = comboI.getSelectedIndex();
        if (rowI == 2) {
            JOptionPane.showMessageDialog(this, "NO HABILITADO PARA TITULARES EXENTOS");
            comboM.requestFocus();
            return false;
        }
        if (rowI == 3) {
            JOptionPane.showMessageDialog(this, "NO HABILITADO PARA TITULARES CONSUMIDOR FINAL");
            comboM.requestFocus();
            return false;
        }
        if (rowM < 1) {
            if (rowI == 4) {
                JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UNA CATEGORIA MONOTRIBUTO");
                comboM.requestFocus();
                return false;
            }
        }
        if (rowI < 1) {
            JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UN TIPO DE INSCRIPCION");
            comboI.requestFocus();
            return false;
        }
        if (nombreFantasiaTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "DEBE INDICAR UN NOMBRE DE FANTASIA\n"
                    + "O UTILICE EL MISMO NOMBRE DE LA PERSONA");
            nombreFantasiaTxt.requestFocus();
            return false;
        }
        if (calleTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "DEBE INDICAR LA CALLE DEL TITULAR DE CUIT\n"
                    + "O UTILICE LA MISMA CALLE DE LA PERSONA");
            calleTxt.requestFocus();
            return false;
        }
        if (numeroTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "DEBE INDICAR NUMERO DE DIRECCION DEL TITULAR DE CUIT\n"
                    + "O UTILICE EL MISMO QUE DE LA PERSONA");
            numeroTxt.requestFocus();
            return false;
        }
        if (codigoPostalTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "DEBE INDICAR CODIGO POSTAL DE DIRECCION DEL TITULAR DE CUIT\n"
                    + "O UTILICE EL MISMO QUE DE LA PERSONA");
            codigoPostalTxt.requestFocus();
            return false;
        }
        if (localidadTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "DEBE INDICAR LOCALIDAD DE DIRECCION DEL TITULAR DE CUIT");
            localidadTxt.requestFocus();
            return false;
        }
        if (provinciaTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "DEBE INDICAR PROVINCIA DE DIRECCION DEL TITULAR DE CUIT2");
            provinciaTxt.requestFocus();
            return false;
        }
        if (cuitTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "DEBE INDICAR NUMERO DE CUIT\n"
                    + "O UTILICE EL CUIL DE LA PERSONA");
            cuitTxt.requestFocus();
            return false;
        }
        if (iibbTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "DEBE INDICAR NUMERO DE INGRESOS BRUTOS\n"
                    + "O UTILICE EL MISMO NUMERO DE CUIT");
            iibbTxt.requestFocus();
            return false;
        }
        if (fechaInicioActividadesTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "DEBE INDICAR UNA FECHA DE INICIO DE ACTIVIDADES");
            fechaInicioActividadesTxt.requestFocus();
            return false;
        }
        if (fechaInicioActividadesTxt.getText().length() != 10) {
            JOptionPane.showMessageDialog(this, "VERIFIQUE FECHA DE INICIO DE ACTIVIDADES");
            fechaInicioActividadesTxt.requestFocus();
            return false;
        }
        if (sucursalTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "DEBE INDICAR UNA SUCURSAL O PUNTO DE VENTA DECLARADO EN AFIP");
            sucursalTxt.requestFocus();
            return false;
        }
        return true;
    }

    private void cargarImporte() {

    }

    private void asignarLogo() {

        String logo;
        JFileChooser selector = new JFileChooser();
        selector.showOpenDialog(this);
        File archivo = selector.getSelectedFile();
        if (archivo != null) {
            logo = archivo.toString();
            titular.setLogo(logo);
            try {
                new TitularCuitService().updateTitularCuit(titular);
            } catch (Exception ex) {
                Logger.getLogger(TitularCuitFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }
}
