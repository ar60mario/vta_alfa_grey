/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.Abono;
import ar.com.ventas.entities.Administrador;
import ar.com.ventas.entities.Domicilio;
import ar.com.ventas.entities.Rubro;
import ar.com.ventas.estructuras.Constantes;
import ar.com.ventas.main.MainFrame;
import ar.com.ventas.services.AbonoService;
import ar.com.ventas.services.AdministradorService;
import ar.com.ventas.services.RubroService;
import ar.com.ventas.util.UtilFrame;
import java.io.File;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jxl.Workbook;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;

/**
 *
 * @author Mario
 */
public class AbmAbonosCanceladosFrame extends javax.swing.JFrame {

    private List<Rubro> rubros;
    private List<Administrador> administradores;
    private List<Abono> abonos = null;
    private DecimalFormat df = new DecimalFormat("#0.00");

    /**
     * Creates new form AbmAbonosFrame
     */
    public AbmAbonosCanceladosFrame() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(Constantes.getR(), Constantes.getG(), Constantes.getB()));
        this.setLocationRelativeTo(null);
//        setExtendedState(6); // this.MAXIMIZED_BOTH
        llenarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        volvarBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        comboR = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        nuevoBtn = new javax.swing.JButton();
        modifcarBtn = new javax.swing.JButton();
        cancelarBtn = new javax.swing.JButton();
        abonosCanceladosBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        comboA = new javax.swing.JComboBox<>();
        excelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("ABM ABONOS CANCELADOS");

        volvarBtn.setText("Volver");
        volvarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volvarBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("RUBRO:");

        comboR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboRActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CONSORCIO", "FRECUENCIA", "CUOTA", "CUOTAS", "VALOR CUOTA", "TOTAL ABONO", "PEND.FACTURAR", "ADMIN"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);

        nuevoBtn.setText("Agregar Nuevo");
        nuevoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoBtnActionPerformed(evt);
            }
        });

        modifcarBtn.setText("Modificar");
        modifcarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifcarBtnActionPerformed(evt);
            }
        });

        cancelarBtn.setText("Cancelar");
        cancelarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarBtnActionPerformed(evt);
            }
        });

        abonosCanceladosBtn.setText("Cancelados");
        abonosCanceladosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abonosCanceladosBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Filtro Admin:");

        comboA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAActionPerformed(evt);
            }
        });

        excelBtn.setText("Excel");
        excelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(nuevoBtn)
                        .addGap(18, 18, 18)
                        .addComponent(modifcarBtn)
                        .addGap(18, 18, 18)
                        .addComponent(cancelarBtn)
                        .addGap(18, 18, 18)
                        .addComponent(abonosCanceladosBtn)
                        .addGap(18, 18, 18)
                        .addComponent(excelBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volvarBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboR, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboA, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 229, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(comboA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volvarBtn)
                    .addComponent(nuevoBtn)
                    .addComponent(modifcarBtn)
                    .addComponent(cancelarBtn)
                    .addComponent(abonosCanceladosBtn)
                    .addComponent(excelBtn))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volvarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volvarBtnActionPerformed
        volver();
    }//GEN-LAST:event_volvarBtnActionPerformed

    private void nuevoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoBtnActionPerformed
        nuevo();
    }//GEN-LAST:event_nuevoBtnActionPerformed

    private void modifcarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifcarBtnActionPerformed
        modificar();
    }//GEN-LAST:event_modifcarBtnActionPerformed

    private void cancelarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarBtnActionPerformed
        cancelar();
    }//GEN-LAST:event_cancelarBtnActionPerformed

    private void abonosCanceladosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abonosCanceladosBtnActionPerformed
        cancelados();
    }//GEN-LAST:event_abonosCanceladosBtnActionPerformed

    private void comboRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboRActionPerformed
        int rowR = comboR.getSelectedIndex();
        if (rowR > 0) {
            Rubro ru = rubros.get(rowR - 1);
            llenarTabla(ru);
        }
    }//GEN-LAST:event_comboRActionPerformed

    private void comboAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAActionPerformed
        int rowR = comboR.getSelectedIndex();
        if (rowR > 0) {
            Rubro ru = rubros.get(rowR - 1);
            llenarTabla(ru);
        }
    }//GEN-LAST:event_comboAActionPerformed

    private void excelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excelBtnActionPerformed
        int rows = tabla.getRowCount();
        if (rows < 1) {
            JOptionPane.showMessageDialog(this, "TABLA VACIA");
            return;
        }
        excel();
    }//GEN-LAST:event_excelBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AbmAbonosCanceladosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AbmAbonosCanceladosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AbmAbonosCanceladosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AbmAbonosCanceladosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AbmAbonosCanceladosFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abonosCanceladosBtn;
    private javax.swing.JButton cancelarBtn;
    private javax.swing.JComboBox<String> comboA;
    private javax.swing.JComboBox<String> comboR;
    private javax.swing.JButton excelBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modifcarBtn;
    private javax.swing.JButton nuevoBtn;
    private javax.swing.JTable tabla;
    private javax.swing.JButton volvarBtn;
    // End of variables declaration//GEN-END:variables

    private void llenarCombo() {

        comboR.removeAllItems();
        comboR.addItem("");
        rubros = null;
        try {
            rubros = new RubroService().getAllRubrosActivos();
        } catch (Exception ex) {
            Logger.getLogger(AbmAbonosCanceladosFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (rubros != null && !rubros.isEmpty()) {
            for (Rubro ru : rubros) {
                comboR.addItem(ru.getDetalle());
            }
        }
        comboA.removeAllItems();
        comboA.addItem("");
        administradores = null;
        try {
            administradores = new AdministradorService().getAllAdministradoresActivos();
        } catch (Exception ex) {
            Logger.getLogger(AbmAbonosCanceladosFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (administradores != null && !administradores.isEmpty()) {
            for (Administrador ad : administradores) {
                comboA.addItem(ad.getRazonSocial());
            }
        }
    }

    private void volver() {
        MainFrame mf = new MainFrame();
        mf.setVisible(true);
        this.dispose();
    }

    private void nuevo() {
        NuevoAbonoFrame naf = new NuevoAbonoFrame();
        naf.setVisible(true);
        this.dispose();
    }

    private void modificar() {
        int row = tabla.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UN ABONO PARA MODIFICAR");
            return;
        }
        Abono a = abonos.get(row);
        ModificarAbonoFrame maf = new ModificarAbonoFrame(a);
        maf.setVisible(true);
        this.dispose();
    }

    private void cancelar() {
        int row = 0;

    }

    private void cancelados() {
        
    }

    private void llenarTabla(Rubro ru) {
        int rowA = comboA.getSelectedIndex();
        UtilFrame.limpiarTabla(tabla);
        DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
        abonos = null;
        try {
            if (rowA > 0) {
                Administrador adm = administradores.get(rowA - 1);
                abonos = new AbonoService().getAllAbonosInactivosOrdenadoByRubroAndAdministrador(ru, adm);
            } else {
                abonos = new AbonoService().getAllAbonosInactivosOrdenadoByRubro(ru);
            }
        } catch (Exception ex) {
            Logger.getLogger(AbmAbonosCanceladosFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "ERROR LEYENDO ADMINISTR");
            return;
        }
        if (abonos != null && !abonos.isEmpty()) {

            for (Abono ab : abonos) {
                int freq = 0;
                int cta = 0;
                Domicilio dm = ab.getConsorcio().getDomicilio();
                String pend = "NO";
                if (ab.getPendiente()) {
                    pend = "SI";
                }
                if (ab.getFrecuencia() != null) {
                    freq = ab.getFrecuencia();
                }
                if (ab.getCuotaFacturada() != null) {
                    cta = ab.getCuotaFacturada();
                }
                Object ob[] = new Object[8];
                ob[0] = dm.getCalle() + " " + dm.getNumero();//ab.getCodigo();
                ob[1] = freq;
                ob[2] = cta;
                ob[3] = ab.getCuotas();
                Double cuo = ab.getImporte() / ab.getCuotas();
                ob[4] = df.format(cuo);
                ob[5] = df.format(ab.getImporte());
                ob[6] = pend;
                ob[7] = ab.getConsorcio().getAdministrador().getRazonSocial();
                tbl.addRow(ob);
            }
            tabla.setModel(tbl);
        }
    }

    private void llenarTabla2(Rubro ru, Administrador adm) {
        UtilFrame.limpiarTabla(tabla);
        DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
        abonos = null;
        try {
            abonos = new AbonoService().getAllAbonosActivosOrdenadoByRubroAndAdministrador(ru, adm);
        } catch (Exception ex) {
            Logger.getLogger(AbmAbonosCanceladosFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (abonos != null && !abonos.isEmpty()) {
//            UtilFrame.limpiarTabla(tabla);
            for (Abono ab : abonos) {
                Domicilio dm = ab.getConsorcio().getDomicilio();
                String pend = "NO";
                if (ab.getPendiente()) {
                    pend = "SI";
                }
                Object ob[] = new Object[4];
                ob[0] = dm.getCalle() + " " + dm.getNumero();//ab.getCodigo();
                ob[1] = df.format(ab.getImporte());
                ob[2] = ab.getCuotas();
                ob[3] = pend;
                tbl.addRow(ob);
            }
            tabla.setModel(tbl);
        }
    }

    private void excel() {
        String ruta = "C:/alfa_sistema/data/excel/abonos_cancelados.xls";
        File archivo = new File(ruta);
        if (archivo.exists()) {
            archivo.delete();
        }
        try {
            archivo.createNewFile();
        } catch (IOException ex) {
            Logger.getLogger(AbmAbonosCanceladosFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        WritableWorkbook libro = null;
        try {
            libro = Workbook.createWorkbook(archivo);
        } catch (IOException ex) {
            Logger.getLogger(AbmAbonosCanceladosFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        WritableSheet hoja1 = libro.createSheet("ABONOS", 0);

        try {
            hoja1.addCell(new jxl.write.Label(0, 0, "ALFA SANEAMIENTOS"));
            hoja1.addCell(new jxl.write.Label(0, 1, "CONSORCIO"));
            hoja1.addCell(new jxl.write.Label(1, 1, "FRECUENCIA"));
            hoja1.addCell(new jxl.write.Label(2, 1, "CUOTA"));
            hoja1.addCell(new jxl.write.Label(3, 1, "CUOTAS"));
            hoja1.addCell(new jxl.write.Label(4, 1, "VALOR CUOTA"));
            hoja1.addCell(new jxl.write.Label(5, 1, "TOTAL ABONO"));
            hoja1.addCell(new jxl.write.Label(6, 1, "PEND.FACTURAR"));
            hoja1.addCell(new jxl.write.Label(7, 1, "ADMINISTRADOR"));
            DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
            int y = 2;
            int rows = tabla.getRowCount();
            for (int i = 0; i < rows; i++) {
                hoja1.addCell(new jxl.write.Label(0, y, tbl.getValueAt(i, 0).toString()));
                hoja1.addCell(new jxl.write.Label(1, y, tbl.getValueAt(i, 1).toString()));
                hoja1.addCell(new jxl.write.Label(2, y, tbl.getValueAt(i, 2).toString()));
                hoja1.addCell(new jxl.write.Label(3, y, tbl.getValueAt(i, 3).toString()));

                if (tbl.getValueAt(i, 4) != " ") {
                    hoja1.addCell(new jxl.write.Number(4, y, Double.valueOf(df.format(Double.valueOf(tbl.getValueAt(i, 5).toString().replace(",", "."))).replace(",", "."))));
                } else {
                    hoja1.addCell(new jxl.write.Label(4, y, ""));
                }

//                hoja1.addCell(new jxl.write.Label(4, y, tbl.getValueAt(i, 4).toString()));
                if (tbl.getValueAt(i, 5) != " ") {
                    hoja1.addCell(new jxl.write.Number(5, y, Double.valueOf(df.format(Double.valueOf(tbl.getValueAt(i, 5).toString().replace(",", "."))).replace(",", "."))));
                } else {
                    hoja1.addCell(new jxl.write.Label(5, y, ""));
                }

//                hoja1.addCell(new jxl.write.Label(5, y, tbl.getValueAt(i, 5).toString()));
                hoja1.addCell(new jxl.write.Label(6, y, tbl.getValueAt(i, 6).toString()));
                hoja1.addCell(new jxl.write.Label(7, y, tbl.getValueAt(i, 7).toString()));
                y += 1;

            }

        } catch (WriteException ex) {
            Logger.getLogger(AbmAbonosCanceladosFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error configurando Excel");
        }
        try {
            libro.write();
            libro.close();
        } catch (IOException ex) {
            Logger.getLogger(AbmAbonosCanceladosFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error: 528");
        } catch (WriteException ex) {
            Logger.getLogger(AbmAbonosCanceladosFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error: 529");
        }
        JOptionPane.showMessageDialog(this, "Excel creado correctamente");

    }
}
