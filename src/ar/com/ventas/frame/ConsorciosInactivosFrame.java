/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.Administrador;
import ar.com.ventas.entities.Consorcio;
import ar.com.ventas.estructuras.Constantes;
import ar.com.ventas.services.AdministradorService;
import ar.com.ventas.services.ConsorcioService;
import ar.com.ventas.util.UtilFrame;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mario
 */
public class ConsorciosInactivosFrame extends javax.swing.JFrame {

    private List<Consorcio> consorcios;
    private List<Administrador> administradores;
    private Boolean filtro = true;

    /**
     * Creates new form AbmConsorcioFrame
     */
    public ConsorciosInactivosFrame() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(Constantes.getR(), Constantes.getG(), Constantes.getB()));
        this.setLocationRelativeTo(null);
//        setExtendedState(this.MAXIMIZED_BOTH);
        limpiarCampos();
        llenarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        volverBtn = new javax.swing.JButton();
        activarBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nombreTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        numeroTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        comboA = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("CONSORCIOS INACTIVOS");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOMBRE", "TELEFONO CONSEJO", "ADMINISTRADOR", "ENCARGADO", "TELEFONO ENCARGADO", "ACTIVO"
            }
        ));
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setPreferredWidth(300);
            tabla.getColumnModel().getColumn(1).setPreferredWidth(100);
            tabla.getColumnModel().getColumn(2).setPreferredWidth(200);
            tabla.getColumnModel().getColumn(3).setPreferredWidth(100);
            tabla.getColumnModel().getColumn(4).setPreferredWidth(100);
            tabla.getColumnModel().getColumn(5).setPreferredWidth(50);
        }

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        activarBtn.setText("Activar");
        activarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activarBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre a Buscar:");

        nombreTxt.setText("NOMBRE");
        nombreTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nombreTxtKeyPressed(evt);
            }
        });

        jLabel2.setText("NÃºmero a Buscar:");

        numeroTxt.setText("NUMERO");
        numeroTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                numeroTxtKeyPressed(evt);
            }
        });

        jLabel3.setText("Filtrar Administrador:");

        comboA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(activarBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volverBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nombreTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numeroTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboA, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nombreTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(numeroTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(comboA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volverBtn)
                    .addComponent(activarBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void activarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activarBtnActionPerformed
        activar();
    }//GEN-LAST:event_activarBtnActionPerformed

    private void nombreTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (nombreTxt.getText().isEmpty()) {
                filtro = true;
            } else {
                filtro = false;
            }
            llenarTabla();
        }
    }//GEN-LAST:event_nombreTxtKeyPressed

    private void numeroTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (nombreTxt.getText().isEmpty()) {
                filtro = true;
            } else {
                filtro = false;
            }
            llenarTabla2();
        }
    }//GEN-LAST:event_numeroTxtKeyPressed

    private void comboAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAActionPerformed
        int rowA = comboA.getSelectedIndex();
        if (rowA > 0) {
            limpiarCampos();
            llenarTablaAdmin(rowA);
        }
    }//GEN-LAST:event_comboAActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsorciosInactivosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsorciosInactivosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsorciosInactivosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsorciosInactivosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsorciosInactivosFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton activarBtn;
    private javax.swing.JComboBox<String> comboA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombreTxt;
    private javax.swing.JTextField numeroTxt;
    private javax.swing.JTable tabla;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void llenarTabla() {
        UtilFrame.limpiarTabla(tabla);
        administradores = null;
        try {
            administradores = new AdministradorService().getAllAdministradoresActivos();
        } catch (Exception ex) {
            Logger.getLogger(AbmConsorcioFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        comboA.removeAllItems();
        comboA.addItem("");
        if (administradores != null && !administradores.isEmpty()) {
            for (Administrador ad : administradores) {
                comboA.addItem(ad.getRazonSocial());
            }
        }
        consorcios = null;
        if (filtro) {
            try {
                consorcios = new ConsorcioService().getAllConsorciosInactivos();
            } catch (Exception ex) {
                Logger.getLogger(ConsorciosInactivosFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            String filtro = nombreTxt.getText();
            try {
                consorcios = new ConsorcioService().getAllConsorciosInactivosByFiltro(filtro);
            } catch (Exception ex) {
                Logger.getLogger(ConsorciosInactivosFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (consorcios != null && !consorcios.isEmpty()) {
            DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
            for (Consorcio consorcio : consorcios) {
                Object o[] = new Object[6];
                o[0] = consorcio.getDomicilio().getCalle()
                        + consorcio.getDomicilio().getNumero();
                o[1] = consorcio.getTelefonoConsejo();
                o[2] = consorcio.getAdministrador().getRazonSocial();
                o[3] = consorcio.getEncargado();
                o[4] = consorcio.getTelefonoEncargado();
                if (consorcio.getActivo()) {
                    o[5] = "ACTIVO";
                } else {
                    o[5] = "INACTIVO";
                }
                tbl.addRow(o);
            }
            tabla.setModel(tbl);
        }
    }

    private void volver() {
        AbmConsorcioFrame mf = new AbmConsorcioFrame();
        mf.setVisible(true);
        this.dispose();
    }

    private void activar() {
        int row = tabla.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UN CONSORCIO PARA ACTIVAR");
            return;
        }
        Consorcio c = consorcios.get(row);
        String dire = c.getNombre()
                + c.getDomicilio().getCalle()
                + c.getDomicilio().getNumero();
        int a = JOptionPane.showConfirmDialog(this, "CONFIRME ACTIVAR CONSORCIO\n"
                + dire, "AtenciÃ³n", JOptionPane.YES_NO_OPTION);
        if (a == 0) {
            c.setActivo(true);
            try {
                new ConsorcioService().updateConsorcio(c);
                JOptionPane.showMessageDialog(this, "CONSORCIO ACTIVADO CORRECTAMENTE");
            } catch (Exception ex) {
                Logger.getLogger(ConsorciosInactivosFrame.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "ERROR Nro.224 ACTIVANDO CONSORCIO");
                return;
            }
            volver();
        }
    }

    private void limpiarCampos() {
        nombreTxt.setText("");
        numeroTxt.setText("");
    }

    private void llenarTabla2() {
        UtilFrame.limpiarTabla(tabla);
        nombreTxt.setText("");
        comboA.setSelectedIndex(0);
        String numero = numeroTxt.getText();
        try {
            consorcios = new ConsorcioService().getAllConsorciosInactivosByNumero(numero);
        } catch (Exception ex) {
            Logger.getLogger(AbmConsorcioFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (consorcios != null && !consorcios.isEmpty()) {
            DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
            for (Consorcio consorcio : consorcios) {
                Object o[] = new Object[6];
                o[0] = consorcio.getNombre() + " "
                        + consorcio.getDomicilio().getCalle() + " "
                        + consorcio.getDomicilio().getNumero();
                o[1] = consorcio.getTelefonoConsejo();
                o[2] = consorcio.getAdministrador().getRazonSocial();
                o[3] = consorcio.getEncargado();
                o[4] = consorcio.getTelefonoEncargado();
                if (consorcio.getActivo()) {
                    o[5] = "ACTIVO";
                } else {
                    o[5] = "INACTIVO";
                }
                tbl.addRow(o);
            }
            tabla.setModel(tbl);
        }
    }

    private void llenarTablaAdmin(int rowA) {
        UtilFrame.limpiarTabla(tabla);
        Administrador administrador = administradores.get(rowA - 1);
        consorcios = null;
        try {
            consorcios = new ConsorcioService().getAllConsorciosInactivosByAdministrador(administrador);
        } catch (Exception ex) {
            Logger.getLogger(AbmConsorcioFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (consorcios != null && !consorcios.isEmpty()) {
            DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
            for (Consorcio consorcio : consorcios) {
                Object o[] = new Object[6];
                o[0] = consorcio.getNombre() + " "
                        + consorcio.getDomicilio().getCalle() + " "
                        + consorcio.getDomicilio().getNumero();
                o[1] = consorcio.getTelefonoConsejo();
                o[2] = consorcio.getAdministrador().getRazonSocial();
                o[3] = consorcio.getEncargado();
                o[4] = consorcio.getTelefonoEncargado();
                if (consorcio.getActivo()) {
                    o[5] = "ACTIVO";
                } else {
                    o[5] = "INACTIVO";
                }
                tbl.addRow(o);
            }
            tabla.setModel(tbl);
        }
    }
}
