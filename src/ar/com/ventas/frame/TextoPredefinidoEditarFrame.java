/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.TextoPredefinido;
import ar.com.ventas.entities.TextoPredefinidoLinea;
import ar.com.ventas.estructuras.Constantes;
import ar.com.ventas.services.TextoPredefinidoLineaService;
import ar.com.ventas.services.TextoPredefinidoService;
import ar.com.ventas.util.UtilFrame;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mario
 */
public class TextoPredefinidoEditarFrame extends javax.swing.JFrame {

    private TextoPredefinido texto;
    private List<TextoPredefinidoLinea> lineas;
    /**
     * Creates new form TextoPredeterminadoEditarFrame
     */
    public TextoPredefinidoEditarFrame(TextoPredefinido texto) {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(Constantes.getR(), Constantes.getG(), Constantes.getB()));
//        this.setLocationRelativeTo(null);
        setExtendedState(6); // this.MAXIMIZED_BOTH
        this.texto = texto;
        llenarFrame();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        volverBtn = new javax.swing.JButton();
        grabarBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        activoChk = new javax.swing.JCheckBox();
        textoCortoTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        agregarLineaBtn = new javax.swing.JButton();
        eliminarLineaBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("EDITAR TEXTO PREDEFINIDO");

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        grabarBtn.setText("Guardar");
        grabarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grabarBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Texto Corto:");

        activoChk.setText("Activo");

        textoCortoTxt.setText("TEXTO CORTO");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TEXTO"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        agregarLineaBtn.setText("Agregar Línea");
        agregarLineaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarLineaBtnActionPerformed(evt);
            }
        });

        eliminarLineaBtn.setText("Eliminar Línea");
        eliminarLineaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarLineaBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(grabarBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volverBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(textoCortoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(149, 149, 149)
                                    .addComponent(activoChk))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(agregarLineaBtn)
                                .addGap(18, 18, 18)
                                .addComponent(eliminarLineaBtn)))
                        .addGap(0, 316, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(activoChk)
                    .addComponent(textoCortoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregarLineaBtn)
                    .addComponent(eliminarLineaBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volverBtn)
                    .addComponent(grabarBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void grabarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grabarBtnActionPerformed
        grabar();
    }//GEN-LAST:event_grabarBtnActionPerformed

    private void agregarLineaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarLineaBtnActionPerformed
        agregar();
    }//GEN-LAST:event_agregarLineaBtnActionPerformed

    private void eliminarLineaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarLineaBtnActionPerformed
        eliminar();
    }//GEN-LAST:event_eliminarLineaBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TextoPredefinidoEditarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TextoPredefinidoEditarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TextoPredefinidoEditarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TextoPredefinidoEditarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TextoPredefinidoEditarFrame(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox activoChk;
    private javax.swing.JButton agregarLineaBtn;
    private javax.swing.JButton eliminarLineaBtn;
    private javax.swing.JButton grabarBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField textoCortoTxt;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void llenarFrame() {
        textoCortoTxt.setText(texto.getTextoCorto());
        if(texto.getActivo()){
            activoChk.setSelected(true);
        }else{
            activoChk.setSelected(false);
        }
        lineas = null;
        try {
            lineas = new TextoPredefinidoLineaService().getAllTextoPredefinidoActivosByTextoPredefinido(texto);
        } catch (Exception ex) {
            Logger.getLogger(TextoPredefinidoEditarFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(lineas != null && !lineas.isEmpty()){
            UtilFrame.limpiarTabla(tabla);
            DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
            for(TextoPredefinidoLinea tpl:lineas){
                Object o[] = new Object[1];
                o[0]=tpl.getLinea();
                tbl.addRow(o);
            }
            tabla.setModel(tbl);
        }
    }

    private void volver() {
        AbmTextoPredefinidoFrame atpf = new AbmTextoPredefinidoFrame();
        atpf.setVisible(true);
        this.dispose();
    }

    private void grabar() {
        if(validar()){
            List<TextoPredefinidoLinea> lineas2 = new ArrayList<>();
            DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
            if(activoChk.isSelected()){
                texto.setActivo(true);
            } else {
                texto.setActivo(false);
            }
            String tex = textoCortoTxt.getText();
            texto.setTextoCorto(tex);
            int rows = tabla.getRowCount();
            for(int i = 0;i < rows; i++){
                String str = tbl.getValueAt(i, 0).toString();
                TextoPredefinidoLinea tpl = new TextoPredefinidoLinea();
                tpl.setLinea(str);
                tpl.setOrden(i);
                tpl.setTextoPredefinido(texto);
                lineas2.add(tpl);
            }
            try {
                new TextoPredefinidoService().updateTextoPredefinido(texto, lineas, lineas2);
            } catch (Exception ex) {
                Logger.getLogger(TextoPredefinidoEditarFrame.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "ERROR GRABANDO TEXTO");
                return;
            }
            JOptionPane.showMessageDialog(this, "TEXTO GRABADO CORRECTAMENTE");
            volver();
        }
    }

    private boolean validar() {
        return true;
    }

    private void agregar() {
        UtilFrame.agregarLinea(1, tabla);
    }

    private void eliminar() {
        int row = tabla.getSelectedRow();
        if(row < 0){
            JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR LINEA A ELIMINAR");
            tabla.requestFocus();
            return;
        }
        DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
        tbl.removeRow(row);
        tabla.setModel(tbl);
    }
}
